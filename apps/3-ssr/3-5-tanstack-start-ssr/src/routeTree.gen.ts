/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIdRouteImport } from './routes/users.$id'
import { Route as PostsIdRouteImport } from './routes/posts.$id'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIdRoute = UsersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => UsersRoute,
} as any)
const PostsIdRoute = PostsIdRouteImport.update({
  id: '/posts/$id',
  path: '/posts/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/users': typeof UsersRouteWithChildren
  '/posts/$id': typeof PostsIdRoute
  '/users/$id': typeof UsersIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/users': typeof UsersRouteWithChildren
  '/posts/$id': typeof PostsIdRoute
  '/users/$id': typeof UsersIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/users': typeof UsersRouteWithChildren
  '/posts/$id': typeof PostsIdRoute
  '/users/$id': typeof UsersIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/users' | '/posts/$id' | '/users/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/users' | '/posts/$id' | '/users/$id'
  id: '__root__' | '/' | '/users' | '/posts/$id' | '/users/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  UsersRoute: typeof UsersRouteWithChildren
  PostsIdRoute: typeof PostsIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id': {
      id: '/users/$id'
      path: '/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof UsersIdRouteImport
      parentRoute: typeof UsersRoute
    }
    '/posts/$id': {
      id: '/posts/$id'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface UsersRouteChildren {
  UsersIdRoute: typeof UsersIdRoute
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersIdRoute: UsersIdRoute,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UsersRoute: UsersRouteWithChildren,
  PostsIdRoute: PostsIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
